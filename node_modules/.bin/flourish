#!/usr/bin/env node

"use strict";

const minimist = require("minimist"),

      log = require("../lib/log");

const OPTS = {
	boolean: [
		"help", "build", "open", "debug", "full", "force",

		// Options for 'publish'
		"prerelease", "patch", "release", "local-testing"
	],
	string: [
		"host", "listen", "port", "user", "password",

		"env",

		// Only relevant for admin users
		"as",
	],

	default: {
		/* Options for 'register', 'login', 'publish': */
		host: "app.flourish.studio",
		// --user and --password can also be used for basic auth credentials

		/* Options for 'run' */
		port: "1685",
		build: true,
		open: false,

		env: "development"
	},

	alias: {
		open: "o",
		help: "h",
		version: "v",
	},

	unknown: function(unknown_option) {
		if (unknown_option.startsWith("-")) {
			log.die("Unknown option: " + unknown_option);
		}
	}
};

// Unhandled rejections indicate an error in the app
// and should be promoted to exceptions.
process.on("unhandledRejection", function(reason, p) {
	console.error("unhandled rejection", reason, p);
	throw reason;
});

function main() {
	const args = minimist(process.argv.slice(2), OPTS);
	let command = args._[0];

	const server_opts = {
		host: args.host,
		user: args.user,
		password: args.password,
	};

	if (args.version) command = "version";
	else if (args.help) command = "help";

	switch (command) {
		case "help":
		case "version":

		case "new":
		case "build":
		case "run":

		case "register":
		case "login":
		case "logout":

		case "whoami":

		case "assign-version-number":
		case "publish":
		case "delete":
		case "upgrade":
		case "list":
		case "history":
			require("../lib/cmd/" + command)(args, server_opts);
			break;

		case "is":
			if (args._[1] === "the") {
				log.victory("Word!");
				break;
			}

		default:
			log.die("Unknown command '" + command + "'. Type 'flourish help' for help.");

		case undefined:
			log.die("No command specified. Type ‘flourish help’ for help.");
	}
}

main();
