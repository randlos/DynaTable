{"version":3,"file":"template.js","sources":["src/state.js","src/data.js","src/update.js","src/draw.js"],"sourcesContent":["\nlet state = {\n  \n    // Tabellen-Optionen:\n    sortingColumn: \"A\",\n    sortingOrder: \"asc\",\n    numberOfEntries: 10,\n  \n\n    // Reload\n    reload: 1,\n\n    // DOM-Layout Tabelle\n    layout: 'pitr',\n\n   // Scrolling y\n    yscroll: '500px',\n\n   // Color-Change\n    headerColor: '#dadada',\n\n    // Haupt-Farben\n    Haupt_Farbe: \"rgba(211, 45, 32, 1)\",\n    Green: '#6CBA6C',\n    darkGreen: '#45891B',\n    Blue: '#42A8CC',\n    darkBlue: '#036E93',\n  \n    // BG-Farben\n    Background_Transparent: \"transparent\",\n    Background_Color_Haupt_opacity: \"rgba(211, 45, 32, 0.5)\",\n  \n    // Partei-Farben\n  \n    cdu_csu_farbe: '#143d4b',\n    cdu_farbe: '#162129',\n    csu_farbe: '#1782d1',\n    spd_farbe: '#e0341f',\n    afd_farbe: '#00b8e3',\n    fdp_farbe: '#f4d50b',\n    gruene_farbe: '#3bae53',\n    dielinke_farbe: '#a00163',\n    sonstige_parteien_farbe: '#c5cad0',\n    nichtwahler_farbe: '#dce1e0',\n    \n  \n   };\n\n   export default state;","var data = {};\nexport default data;","\nimport state from \"./state\";\nimport data from \"./data\";\n\n\nimport {numconvert} from './numberConversion.js';\n\n\nfunction update() {\n    \n/*     function sortingOrderTranlsate(order) {\n        if (state.sortingOrder == \"Aufsteigend\") {\n            state.sortingOrder = \"asc\";\n            return state.sortingOrder;\n        }\n    \n        else if (state.sortingOrder == \"Absteigend\"){\n            state.sortingOrder = \"desc\";\n            return state.sortingOrder;\n        }\n        else {\n            return state.sortingOrder;\n        }\n\n    } */\n\n    function reloadTable(variable) {\n        \n        table.ajax.reload();\n        return variable;\n    }\n\n    \n    function maxValue(data) {\n        let dataArray = new Array();\n\n        data.forEach(function(item, index, array) {\n            // GET THE LAST ITEM (LAST COLUMN CELL) IN A ARRAY\n            //console.log(item.values.slice(-1)[0], index);\n            dataArray.push(item.values.slice(-1)[0]);\n\n        });\n        \n        let maxValue = Math.max.apply(Math, dataArray);\n        //console.log(maxValue);\n\n        return maxValue;\n    }\n\n    let maxVal = maxValue(data.Data);\n   \n    // function balken(data) {\n        \n    //     // let chart = d3.select(\"body\")//d3.select(\"td:nth-last-child(1)\")\n    //     // .append(\"svg\")\n    //     // .attr(\"class\", \"barchart\")\n    //     // .attr(\"width\", \"100%\")\n    //     // .attr(\"height\", \"70%\");\n      \n\n    //     // let bar = chart.select(\"g\")\n    //     // .data(data)    \n    //     // .enter()\n    //     // .append(\"g\");\n        \n        \n    //     let bar = d3.append(\"rect\")\n    //     .attr(\"width\", function(d) { return 100/d + \"%\"}) //function(d) { return (d/(d3.sum(data)))*100 + \"%\"; } )   // function(d) { return d + \"%\"})\n    //     .attr(\"x\", \"0\")\n    //     .attr(\"y\", \"50%\")\n    //     .attr(\"height\", \"80%\")\n    //     .attr(\"fill\", \"#000\");\n    // }\n\n    function tranlsateSortingAlphaToNumber(alpha) {\n        let alphaList = [{number:1, string:'A'},\n                         {number:2, string:'B'},\n                         {number:3, string:'C'},\n                         {number:4, string:'D'},\n                         {number:5, string:'E'},\n                         {number:6, string:'F'},\n                         {number:7, string:'G'},\n                         {number:8, string:'H'},\n                         {number:9, string:'I'},\n                         {number:10, string:'J'},\n                         {number:11, string:'K'},\n                         {number:12, string:'L'},\n                         {number:13, string:'M'},\n                         {number:14, string:'N'},\n                         {number:15, string:'O'},\n                         {number:16, string:'P'},\n                         {number:17, string:'Q'},\n                         {number:18, string:'R'},\n                         {number:19, string:'S'},\n                         {number:20, string:'T'},\n                         {number:21, string:'U'},\n                         {number:22, string:'V'},\n                         {number:23, string:'W'},\n                         {number:24, string:'X'},\n                         {number:25, string:'Y'},\n                         {number:26, string:'Z'}\n                        ];\n        \n        let i;\n        for (i=0; i < alphaList.length; i++) {\n            if (alphaList[i].string == alpha) {\n                //console.log(\"Output:\" + typeof(alphaList[i].number));\n                return alphaList[i].number -1;\n            };\n        };       \n        \n\n    }\n\n\n    function c_names() {\n        let column_data = [];\n        for(var i=0; i<data.Data.column_names.values.length; i++){\n            column_data.push({\"title\": data.Data.column_names.values[i]});     \n        };\n        //console.log(column_data);\n        return column_data;\n    }\n    \n    \n    \n    let table = $('#myTable').dataTable( {\n        data: data.Data.map(e => e.values),\n        colReorder: {\n            enable: true,\n        //     order: [ 5, 4, 3, 2, 1, 0 ],\n        //     realtime: false,\n\n        },\n        // \"drawCallback\": function( settings ) {\n        //     let api = this.api();\n        //     // console.log( api.rows( {page:'current'} ).data() );\n        //     //console.log(api.columns( {page:'current'}).data());\n        //     //var api = new $.fn.dataTable.Api( settings );\n \n            \n        //     // Output the data for the visible rows to the browser's console\n        //     // You might do something more useful with it!\n        //     //console.log(api.search);\n        //     //console.log( api.rows( {page:'current'} ).data().table );\n            \n        //     // $('#mySearch').on( 'keyup', function () {\n        //     //     table.search( this.value );\n        //     // } );\n        // },\n        \"dom\": state.layout,\n        // buttons: [\n        //     {\n        //         extend: 'columnsToggle',\n        //     }\n        // ],\n        responsive: true,\n        \"columnDefs\" : [{\n            \"targets\": 0,\n            \"data\": 0,\n            \"render\": function ( data, type, row, meta ) {\n                if (data.indexOf(\"//www.bild.de/\") > -1){\n                    var img_tag = '<img src=\"'+data+'\" height=\"100\" weight=\"100\">';\n                    return img_tag;\n                }\n                else {\n                    return data;\n                }\n              },\n        },{\n            \"targets\": -1,\n            \"render\": function (data, type, row, meta) {\n\n                if (!isNaN(data)) {\n                   \n                    let pre_bar_container = '<div class=\"barcont\">';\n                    let bartext = '<div class=\"bartext\"><p>' + data + '</p></div>';\n                    let bar = '<div class=\"bar\"><svg class=\"barsvg\" style=\"height:10px; width:' + data/maxVal * 100 +  '%; background:#000000\"></svg></div>';\n                    let post_bar_container = '</div>';\n                    return pre_bar_container + bar + bartext + post_bar_container;\n                    \n                }\n                else {\n                    return data;\n                }\n            }\n        }],\n        \"paging\": false,\n        \"scrollY\": state.yscroll,\n        //\"scrollCollapse\": true,\n        \"pageLength\":state.numberOfEntries,\n        \"order\": [tranlsateSortingAlphaToNumber(state.sortingColumn), state.sortingOrder], \n        columns: c_names(),\n        \"language\": {\n            \"url\": \"//cdn.datatables.net/plug-ins/1.10.19/i18n/German.json\"\n        },\n        \"drawCallback\": function ( settings ) {\n\n            // Change Header Color\n            $('.dataTables_scrollHead').css(\"background\", state.headerColor);          \n            //console.log(\"Table reload!\");\n            //console.log(state.headerColor);\n        }\n    });\n\n\n    $('#mySearch').on( 'keyup', function() {\n        $('#myTable').DataTable().search( this.value ).draw();\n    } );\n\n    // Deactivate Search for Grafik PNG Export\n    function deactivateSearch() {\n        if (state.layout == \"t\") {\n            $('#mySearch').remove();\n        }\n    }\n    \n    deactivateSearch()\n    \n    \n    $(\"iframe[name='preview']\").each(function() {\n        this.sandbox += ' allow-modals';\n    });\n\n\n;\n\n\n    // .map(function(d) { return comma_to_point(d.schlusskurs) })\n}\n\nexport default update;\n","import update from \"./update\";\nimport state from \"./state\";\n\n\nfunction draw() {\n    // The draw function is called when the template first loads\n    update();\n\n}\n\nexport default draw;"],"names":["state","sortingColumn","sortingOrder","numberOfEntries","reload","layout","yscroll","headerColor","Haupt_Farbe","Green","darkGreen","Blue","darkBlue","Background_Transparent","Background_Color_Haupt_opacity","cdu_csu_farbe","cdu_farbe","csu_farbe","spd_farbe","afd_farbe","fdp_farbe","gruene_farbe","dielinke_farbe","sonstige_parteien_farbe","nichtwahler_farbe","data","update","maxVal","dataArray","Array","forEach","item","index","array","push","values","slice","Math","max","apply","maxValue","Data","$","dataTable","map","e","colReorder","enable","dom","responsive","columnDefs","targets","render","type","row","meta","indexOf","isNaN","paging","scrollY","pageLength","order","alpha","i","alphaList","number","string","length","tranlsateSortingAlphaToNumber","columns","column_data","column_names","title","c_names","language","url","drawCallback","settings","css","on","DataTable","search","this","value","draw","remove","each","sandbox"],"mappings":"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"}